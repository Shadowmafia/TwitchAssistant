//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YoutubePlayerLib.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("YoutubePlayerLib.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///	&lt;meta charset=&apos;UTF-8&apos; /&gt;
        ///	&lt;style type=&apos;text/css&apos;&gt;
        ///		.videoWrapper {
        ///
        ///		}
        ///		.videoWrapper iframe {
        ///			position: absolute;
        ///			top: 0;
        ///			left: 0;
        ///			width: 100%;
        ///			height: 100%;
        ///		}
        ///	&lt;/style&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///	&lt;div class=&quot;videoWrapper&quot;&gt;
        ///		&lt;div id=&quot;player&quot;&gt;&lt;/div&gt;
        ///	&lt;/div&gt;
        ///
        ///	&lt;script&gt;
        ///        // 2. This code loads the IFrame Player API code asynchronously.
        ///        var tag = document.createElement(&apos;script&apos;);
        ///
        ///        tag.src = &quot;https://www.youtube.com/iframe_api&quot;;
        ///        var first [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string CefPlayer {
            get {
                return ResourceManager.GetString("CefPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на // 2. This code loads the IFrame Player API code asynchronously.
        ///  var tag = document.createElement(&apos;script&apos;);
        ///
        ///  tag.src = &quot;https://www.youtube.com/iframe_api&quot;;
        ///  var firstScriptTag = document.getElementsByTagName(&apos;script&apos;)[0];
        ///  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        ///
        ///  // 3. This function creates an &lt;iframe&gt; (and YouTube player)
        ///  //    after the API code downloads.
        ///  var player;
        ///  var autoPlay = false;
        ///  var quality = &quot;default&quot;;
        ///  var startUpId = &apos;XIMLoLxmTDw&apos;;
        ///  
        ///  function onYouT [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string CefPlayer1 {
            get {
                return ResourceManager.GetString("CefPlayer1", resourceCulture);
            }
        }
    }
}
